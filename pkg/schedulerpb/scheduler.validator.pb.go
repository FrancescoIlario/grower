// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: scheduler.proto

package schedulerpb

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ListSchedulesRequest) Validate() error {
	return nil
}
func (this *ListSchedulesResponse) Validate() error {
	for _, item := range this.Schedules {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Schedules", err)
			}
		}
	}
	return nil
}
func (this *GetScheduleRequest) Validate() error {
	return nil
}
func (this *CreateScheduleRequest) Validate() error {
	if this.OpenTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.OpenTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("OpenTime", err)
		}
	}
	if this.CloseTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CloseTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CloseTime", err)
		}
	}
	return nil
}
func (this *UpdateScheduleRequest) Validate() error {
	if this.Schedule != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Schedule); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Schedule", err)
		}
	}
	return nil
}
func (this *DeleteScheduleRequest) Validate() error {
	return nil
}
func (this *Schedule) Validate() error {
	if this.CreationTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreationTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreationTime", err)
		}
	}
	if this.OpenTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.OpenTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("OpenTime", err)
		}
	}
	if this.CloseTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CloseTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CloseTime", err)
		}
	}
	return nil
}
func (this *TimePoint) Validate() error {
	if !(this.Hours > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("Hours", fmt.Errorf(`value '%v' must be greater than '-1'`, this.Hours))
	}
	if !(this.Hours < 24) {
		return github_com_mwitkow_go_proto_validators.FieldError("Hours", fmt.Errorf(`value '%v' must be less than '24'`, this.Hours))
	}
	if !(this.Minutes > -1) {
		return github_com_mwitkow_go_proto_validators.FieldError("Minutes", fmt.Errorf(`value '%v' must be greater than '-1'`, this.Minutes))
	}
	if !(this.Minutes < 60) {
		return github_com_mwitkow_go_proto_validators.FieldError("Minutes", fmt.Errorf(`value '%v' must be less than '60'`, this.Minutes))
	}
	return nil
}
