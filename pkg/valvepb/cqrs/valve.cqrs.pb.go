// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: valve.cqrs.proto

package cqrs

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OpenValveCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string               `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CreationTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=CreationTime,proto3" json:"CreationTime,omitempty"`
}

func (x *OpenValveCommand) Reset() {
	*x = OpenValveCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valve_cqrs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenValveCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenValveCommand) ProtoMessage() {}

func (x *OpenValveCommand) ProtoReflect() protoreflect.Message {
	mi := &file_valve_cqrs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenValveCommand.ProtoReflect.Descriptor instead.
func (*OpenValveCommand) Descriptor() ([]byte, []int) {
	return file_valve_cqrs_proto_rawDescGZIP(), []int{0}
}

func (x *OpenValveCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OpenValveCommand) GetCreationTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

type OpenValveCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenValveCommandResponse) Reset() {
	*x = OpenValveCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valve_cqrs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenValveCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenValveCommandResponse) ProtoMessage() {}

func (x *OpenValveCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_valve_cqrs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenValveCommandResponse.ProtoReflect.Descriptor instead.
func (*OpenValveCommandResponse) Descriptor() ([]byte, []int) {
	return file_valve_cqrs_proto_rawDescGZIP(), []int{1}
}

type CloseValveCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string               `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CreationTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=CreationTime,proto3" json:"CreationTime,omitempty"`
}

func (x *CloseValveCommand) Reset() {
	*x = CloseValveCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valve_cqrs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseValveCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseValveCommand) ProtoMessage() {}

func (x *CloseValveCommand) ProtoReflect() protoreflect.Message {
	mi := &file_valve_cqrs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseValveCommand.ProtoReflect.Descriptor instead.
func (*CloseValveCommand) Descriptor() ([]byte, []int) {
	return file_valve_cqrs_proto_rawDescGZIP(), []int{2}
}

func (x *CloseValveCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloseValveCommand) GetCreationTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

type CloseValveCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseValveCommandResponse) Reset() {
	*x = CloseValveCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valve_cqrs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseValveCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseValveCommandResponse) ProtoMessage() {}

func (x *CloseValveCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_valve_cqrs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseValveCommandResponse.ProtoReflect.Descriptor instead.
func (*CloseValveCommandResponse) Descriptor() ([]byte, []int) {
	return file_valve_cqrs_proto_rawDescGZIP(), []int{3}
}

type GetStatusQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatusQuery) Reset() {
	*x = GetStatusQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valve_cqrs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusQuery) ProtoMessage() {}

func (x *GetStatusQuery) ProtoReflect() protoreflect.Message {
	mi := &file_valve_cqrs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusQuery.ProtoReflect.Descriptor instead.
func (*GetStatusQuery) Descriptor() ([]byte, []int) {
	return file_valve_cqrs_proto_rawDescGZIP(), []int{4}
}

type GetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valve_cqrs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_valve_cqrs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_valve_cqrs_proto_rawDescGZIP(), []int{5}
}

var File_valve_cqrs_proto protoreflect.FileDescriptor

var file_valve_cqrs_proto_rawDesc = []byte{
	0x0a, 0x10, 0x76, 0x61, 0x6c, 0x76, 0x65, 0x2e, 0x63, 0x71, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x63, 0x71, 0x72, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x10, 0x4f, 0x70, 0x65,
	0x6e, 0x56, 0x61, 0x6c, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x3e, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x1a, 0x0a,
	0x18, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x0a, 0x11, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x56, 0x61, 0x6c, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x3e,
	0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x1b,
	0x0a, 0x19, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x13, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x36, 0x48, 0x03, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x46, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x63, 0x6f, 0x49, 0x6c, 0x61, 0x72,
	0x69, 0x6f, 0x2f, 0x67, 0x72, 0x6f, 0x77, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x76, 0x61,
	0x6c, 0x76, 0x65, 0x70, 0x62, 0x2f, 0x63, 0x71, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_valve_cqrs_proto_rawDescOnce sync.Once
	file_valve_cqrs_proto_rawDescData = file_valve_cqrs_proto_rawDesc
)

func file_valve_cqrs_proto_rawDescGZIP() []byte {
	file_valve_cqrs_proto_rawDescOnce.Do(func() {
		file_valve_cqrs_proto_rawDescData = protoimpl.X.CompressGZIP(file_valve_cqrs_proto_rawDescData)
	})
	return file_valve_cqrs_proto_rawDescData
}

var file_valve_cqrs_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_valve_cqrs_proto_goTypes = []interface{}{
	(*OpenValveCommand)(nil),          // 0: cqrs.OpenValveCommand
	(*OpenValveCommandResponse)(nil),  // 1: cqrs.OpenValveCommandResponse
	(*CloseValveCommand)(nil),         // 2: cqrs.CloseValveCommand
	(*CloseValveCommandResponse)(nil), // 3: cqrs.CloseValveCommandResponse
	(*GetStatusQuery)(nil),            // 4: cqrs.GetStatusQuery
	(*GetStatusResponse)(nil),         // 5: cqrs.GetStatusResponse
	(*timestamp.Timestamp)(nil),       // 6: google.protobuf.Timestamp
}
var file_valve_cqrs_proto_depIdxs = []int32{
	6, // 0: cqrs.OpenValveCommand.CreationTime:type_name -> google.protobuf.Timestamp
	6, // 1: cqrs.CloseValveCommand.CreationTime:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_valve_cqrs_proto_init() }
func file_valve_cqrs_proto_init() {
	if File_valve_cqrs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_valve_cqrs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenValveCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valve_cqrs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenValveCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valve_cqrs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseValveCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valve_cqrs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseValveCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valve_cqrs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valve_cqrs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_valve_cqrs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_valve_cqrs_proto_goTypes,
		DependencyIndexes: file_valve_cqrs_proto_depIdxs,
		MessageInfos:      file_valve_cqrs_proto_msgTypes,
	}.Build()
	File_valve_cqrs_proto = out.File
	file_valve_cqrs_proto_rawDesc = nil
	file_valve_cqrs_proto_goTypes = nil
	file_valve_cqrs_proto_depIdxs = nil
}
